{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(GET_PRODUCT_LIST_FROM_DB),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(GET_PRODUCT_LIST_Watcher),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, fork, put, takeEvery, delay } from \"redux-saga/effects\";\nimport * as types from \"./TestTypes\";\nimport * as actions from \"./TestActions\";\nimport api from \"Api\"; //=========================\n// REQUESTS\n//=========================\n\nvar GET_PRODUCT_LIST_Request =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var payload;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            payload = _ref.payload;\n            return _context.abrupt(\"return\", payload);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function GET_PRODUCT_LIST_Request(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //=========================\n// CALL(GENERATOR) ACTIONS\n//=========================\n\n\nfunction GET_PRODUCT_LIST_FROM_DB(e) {\n  var _data;\n\n  return _regeneratorRuntime.wrap(function GET_PRODUCT_LIST_FROM_DB$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(GET_PRODUCT_LIST_Request, e);\n\n        case 3:\n          _data = _context2.sent;\n          _context2.next = 6;\n          return put(actions.getProductList_Success(_data));\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put(actions.getProductList_Failure(data));\n\n        case 12:\n          console.log('Error!');\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n} //=======================\n// WATCHER FUNCTIONS\n//=======================\n\n\nexport function GET_PRODUCT_LIST_Watcher() {\n  return _regeneratorRuntime.wrap(function GET_PRODUCT_LIST_Watcher$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(types.GET_PRODUCT_LIST, GET_PRODUCT_LIST_FROM_DB);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n} //=======================\n// FORK SAGAS TO STORE\n//=======================\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([fork(GET_PRODUCT_LIST_Watcher)]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/OC Digital/Documents/Venture Cars/vc-web/redux/ducks/lead/test/TestSaga.js"],"names":["GET_PRODUCT_LIST_FROM_DB","GET_PRODUCT_LIST_Watcher","rootSaga","all","call","fork","put","takeEvery","delay","types","actions","api","GET_PRODUCT_LIST_Request","payload","e","data","getProductList_Success","getProductList_Failure","console","log","GET_PRODUCT_LIST"],"mappings":";;;;;yBAqBUA,wB;;;yBAaOC,wB;;;yBAOQC,Q;;AAzCzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,EAA0CC,KAA1C,QAAuD,oBAAvD;AAEA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AAEA,OAAOC,GAAP,MAAgB,KAAhB,C,CAEA;AACA;AACA;;AACA,IAAMC,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,YAAAA,OAAR,QAAQA,OAAR;AAAA,6CAIxBA,OAJwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAxBD,wBAAwB;AAAA;AAAA;AAAA,GAA9B,C,CAOA;AACA;AACA;;;AACA,SAAUZ,wBAAV,CAAmCc,CAAnC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMV,IAAI,CAACQ,wBAAD,EAA2BE,CAA3B,CAAV;;AAFjB;AAEUC,UAAAA,KAFV;AAAA;AAGI,iBAAMT,GAAG,CAACI,OAAO,CAACM,sBAAR,CAA+BD,KAA/B,CAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMT,GAAG,CAACI,OAAO,CAACO,sBAAR,CAA+BF,IAA/B,CAAD,CAAT;;AALJ;AAMIG,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAUA;AACA;AACA;;;AACA,OAAO,SAAUlB,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMM,SAAS,CAACE,KAAK,CAACW,gBAAP,EAAyBpB,wBAAzB,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAIP;AACA;AACA;;AACA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACE,IAAI,CAACJ,wBAAD,CAAL,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, fork, put, takeEvery, delay } from \"redux-saga/effects\";\r\n\r\nimport * as types from \"./TestTypes\";\r\n\r\nimport * as actions from \"./TestActions\";\r\n\r\nimport api from \"Api\";\r\n\r\n//=========================\r\n// REQUESTS\r\n//=========================\r\nconst GET_PRODUCT_LIST_Request = async ({payload}) => {\r\n\r\n  // API CALL HERE\r\n  \r\n  return payload\r\n};\r\n\r\n//=========================\r\n// CALL(GENERATOR) ACTIONS\r\n//=========================\r\nfunction* GET_PRODUCT_LIST_FROM_DB(e) {\r\n  try {\r\n    const data = yield call(GET_PRODUCT_LIST_Request, e);\r\n    yield put(actions.getProductList_Success(data));\r\n  } catch (error) {\r\n    yield put(actions.getProductList_Failure(data));\r\n    console.log('Error!')\r\n  }\r\n}\r\n\r\n//=======================\r\n// WATCHER FUNCTIONS\r\n//=======================\r\nexport function* GET_PRODUCT_LIST_Watcher() {\r\n  yield takeEvery(types.GET_PRODUCT_LIST, GET_PRODUCT_LIST_FROM_DB);\r\n}\r\n\r\n//=======================\r\n// FORK SAGAS TO STORE\r\n//=======================\r\nexport default function* rootSaga() {\r\n  yield all([fork(GET_PRODUCT_LIST_Watcher)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}