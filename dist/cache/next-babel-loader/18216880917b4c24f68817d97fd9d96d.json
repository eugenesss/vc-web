{"ast":null,"code":"/**\r\n * Redux Store\r\n */\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./reducers\";\nimport RootSaga from \"./sagas\";\n\nconst makeStore = (initialState, options) => {\n  // 1: Create the middleware\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(reducers, initialState, compose(applyMiddleware(sagaMiddleware))); // sagaMiddleware.run(RootSaga);\n\n  store.sagaTask = sagaMiddleware.run(RootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"./reducers\", () => {\n      const nextRootReducer = require(\"./reducers\");\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  store.subscribe(() => {\n    store.getState();\n  }); // store.sagaTask = sagaMiddleware.run(rootSaga);\n\n  return store;\n}; // // create the saga middleware\n// const sagaMiddleware = createSagaMiddleware();\n// const middlewares = [sagaMiddleware];\n// export function configureStore(initialState) {\n//   const store = createStore(\n//     reducers,\n//     initialState,\n//     compose(applyMiddleware(...middlewares))\n//   );\n//   sagaMiddleware.run(RootSaga);\n//   if (module.hot) {\n//     // Enable Webpack hot module replacement for reducers\n//     module.hot.accept(\"./reducers\", () => {\n//       const nextRootReducer = require(\"./reducers\");\n//       store.replaceReducer(nextRootReducer);\n//     });\n//   }\n//   store.subscribe(() => {\n//     store.getState();\n//   });\n//   return store;\n// }\n// export const store = makeStore();\n\n\nexport default makeStore;","map":{"version":3,"sources":["C:/Users/OC Digital/Documents/Venture Cars/vc-web/redux/store.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","reducers","RootSaga","makeStore","initialState","options","sagaMiddleware","store","sagaTask","run","module","hot","accept","nextRootReducer","require","replaceReducer","subscribe","getState"],"mappings":"AAAA;;;AAGA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,SAArB;;AAEA,MAAMC,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC3C;AACA,QAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AACA,QAAMO,KAAK,GAAGV,WAAW,CACvBI,QADuB,EAEvBG,YAFuB,EAGvBL,OAAO,CAACD,eAAe,CAACQ,cAAD,CAAhB,CAHgB,CAAzB,CAH2C,CAS3C;;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBP,QAAnB,CAAjB;;AAEA,MAAIQ,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,MAAM;AACpC,YAAMC,eAAe,GAAGC,OAAO,CAAC,YAAD,CAA/B;;AACAP,MAAAA,KAAK,CAACQ,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AAEDN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBT,IAAAA,KAAK,CAACU,QAAN;AACD,GAFD,EApB2C,CAwB3C;;AAEA,SAAOV,KAAP;AACD,CA3BD,C,CA6BA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;;;AAEA,eAAeJ,SAAf","sourcesContent":["/**\r\n * Redux Store\r\n */\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducers from \"./reducers\";\r\nimport RootSaga from \"./sagas\";\r\n\r\nconst makeStore = (initialState, options) => {\r\n  // 1: Create the middleware\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(\r\n    reducers,\r\n    initialState,\r\n    compose(applyMiddleware(sagaMiddleware))\r\n  );\r\n\r\n  // sagaMiddleware.run(RootSaga);\r\n  store.sagaTask = sagaMiddleware.run(RootSaga);\r\n\r\n  if (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept(\"./reducers\", () => {\r\n      const nextRootReducer = require(\"./reducers\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  store.subscribe(() => {\r\n    store.getState();\r\n  });\r\n\r\n  // store.sagaTask = sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n\r\n// // create the saga middleware\r\n// const sagaMiddleware = createSagaMiddleware();\r\n\r\n// const middlewares = [sagaMiddleware];\r\n\r\n// export function configureStore(initialState) {\r\n//   const store = createStore(\r\n//     reducers,\r\n//     initialState,\r\n//     compose(applyMiddleware(...middlewares))\r\n//   );\r\n\r\n//   sagaMiddleware.run(RootSaga);\r\n\r\n//   if (module.hot) {\r\n//     // Enable Webpack hot module replacement for reducers\r\n//     module.hot.accept(\"./reducers\", () => {\r\n//       const nextRootReducer = require(\"./reducers\");\r\n//       store.replaceReducer(nextRootReducer);\r\n//     });\r\n//   }\r\n\r\n//   store.subscribe(() => {\r\n//     store.getState();\r\n//   });\r\n\r\n//   return store;\r\n// }\r\n\r\n// export const store = makeStore();\r\n\r\nexport default makeStore;\r\n"]},"metadata":{},"sourceType":"module"}