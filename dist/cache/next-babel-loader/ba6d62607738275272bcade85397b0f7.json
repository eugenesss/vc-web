{"ast":null,"code":"import { all, call, fork, put, takeEvery, delay } from \"redux-saga/effects\";\nimport * as types from \"./TestTypes\";\nimport * as actions from \"./TestActions\";\nimport api from \"Api\"; //=========================\n// REQUESTS\n//=========================\n\nconst GET_PRODUCT_LIST_Request = async ({\n  payload\n}) => {\n  // API CALL HERE\n  return payload;\n}; //=========================\n// CALL(GENERATOR) ACTIONS\n//=========================\n\n\nfunction* GET_PRODUCT_LIST_FROM_DB(e) {\n  try {\n    const data = yield call(GET_PRODUCT_LIST_Request, e);\n    yield put(actions.getProductList_Success(data));\n  } catch (error) {\n    yield put(actions.getProductList_Failure(data));\n    console.log('Error!');\n  }\n} //=======================\n// WATCHER FUNCTIONS\n//=======================\n\n\nexport function* GET_PRODUCT_LIST_Watcher() {\n  yield takeEvery(types.GET_PRODUCT_LIST, GET_PRODUCT_LIST_FROM_DB);\n} //=======================\n// FORK SAGAS TO STORE\n//=======================\n\nexport default function* rootSaga() {\n  yield all([fork(GET_PRODUCT_LIST_Watcher)]);\n}","map":{"version":3,"sources":["C:/Users/OC Digital/Documents/Venture Cars/vc-web/redux/ducks/lead/test/TestSaga.js"],"names":["all","call","fork","put","takeEvery","delay","types","actions","api","GET_PRODUCT_LIST_Request","payload","GET_PRODUCT_LIST_FROM_DB","e","data","getProductList_Success","error","getProductList_Failure","console","log","GET_PRODUCT_LIST_Watcher","GET_PRODUCT_LIST","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,EAA0CC,KAA1C,QAAuD,oBAAvD;AAEA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AAEA,OAAOC,GAAP,MAAgB,KAAhB,C,CAEA;AACA;AACA;;AACA,MAAMC,wBAAwB,GAAG,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAqB;AAEpD;AAEA,SAAOA,OAAP;AACD,CALD,C,CAOA;AACA;AACA;;;AACA,UAAUC,wBAAV,CAAmCC,CAAnC,EAAsC;AACpC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACQ,wBAAD,EAA2BG,CAA3B,CAAvB;AACA,UAAMT,GAAG,CAACI,OAAO,CAACO,sBAAR,CAA+BD,IAA/B,CAAD,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACI,OAAO,CAACS,sBAAR,CAA+BH,IAA/B,CAAD,CAAT;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF,C,CAED;AACA;AACA;;;AACA,OAAO,UAAUC,wBAAV,GAAqC;AAC1C,QAAMf,SAAS,CAACE,KAAK,CAACc,gBAAP,EAAyBT,wBAAzB,CAAf;AACD,C,CAED;AACA;AACA;;AACA,eAAe,UAAUU,QAAV,GAAqB;AAClC,QAAMrB,GAAG,CAAC,CAACE,IAAI,CAACiB,wBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, fork, put, takeEvery, delay } from \"redux-saga/effects\";\r\n\r\nimport * as types from \"./TestTypes\";\r\n\r\nimport * as actions from \"./TestActions\";\r\n\r\nimport api from \"Api\";\r\n\r\n//=========================\r\n// REQUESTS\r\n//=========================\r\nconst GET_PRODUCT_LIST_Request = async ({payload}) => {\r\n\r\n  // API CALL HERE\r\n  \r\n  return payload\r\n};\r\n\r\n//=========================\r\n// CALL(GENERATOR) ACTIONS\r\n//=========================\r\nfunction* GET_PRODUCT_LIST_FROM_DB(e) {\r\n  try {\r\n    const data = yield call(GET_PRODUCT_LIST_Request, e);\r\n    yield put(actions.getProductList_Success(data));\r\n  } catch (error) {\r\n    yield put(actions.getProductList_Failure(data));\r\n    console.log('Error!')\r\n  }\r\n}\r\n\r\n//=======================\r\n// WATCHER FUNCTIONS\r\n//=======================\r\nexport function* GET_PRODUCT_LIST_Watcher() {\r\n  yield takeEvery(types.GET_PRODUCT_LIST, GET_PRODUCT_LIST_FROM_DB);\r\n}\r\n\r\n//=======================\r\n// FORK SAGAS TO STORE\r\n//=======================\r\nexport default function* rootSaga() {\r\n  yield all([fork(GET_PRODUCT_LIST_Watcher)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}