{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from \"./TestTypes\";\nconst INIT_STATE = {\n  ProductOption: {},\n  ProductState: {\n    Test: 'Hello World'\n  }\n};\nexport default ((state = INIT_STATE, action) => {\n  switch (action.type) {\n    case types.GET_PRODUCT_LIST_SUCCESS:\n      let ProductState = _objectSpread({}, state.ProductState);\n\n      ProductState.Test = action.payload;\n      return _objectSpread({}, state, {\n        ProductState\n      });\n\n    case types.GET_PRODUCT_LIST_FAILURE:\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/OC Digital/Documents/Venture Cars/vc-web/redux/ducks/lead/test/TestReducer.js"],"names":["types","INIT_STATE","ProductOption","ProductState","Test","state","action","type","GET_PRODUCT_LIST_SUCCESS","payload","GET_PRODUCT_LIST_FAILURE"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,aAAvB;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,aAAa,EAAC,EADG;AAEjBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAC;AADO;AAFG,CAAnB;AAQA,gBAAe,CAACC,KAAK,GAAGJ,UAAT,EAAqBK,MAArB,KAAgC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,KAAK,CAACQ,wBAAX;AAEI,UAAIL,YAAY,qBAAOE,KAAK,CAACF,YAAb,CAAhB;;AAEAA,MAAAA,YAAY,CAACC,IAAb,GAAoBE,MAAM,CAACG,OAA3B;AAEA,+BACKJ,KADL;AAEEF,QAAAA;AAFF;;AAKJ,SAAKH,KAAK,CAACU,wBAAX;AACE,+BACKL,KADL;;AAIF;AACE,+BAAYA,KAAZ;AAnBJ;AAqBD,CAtBD","sourcesContent":["import * as types from \"./TestTypes\";\r\n\r\nconst INIT_STATE = {\r\n  ProductOption:{},\r\n  ProductState: {\r\n    Test:'Hello World'\r\n  }\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n\r\n    case types.GET_PRODUCT_LIST_SUCCESS:\r\n      \r\n        let ProductState = {...state.ProductState}\r\n\r\n        ProductState.Test = action.payload\r\n\r\n        return {\r\n          ...state,\r\n          ProductState\r\n        };\r\n\r\n    case types.GET_PRODUCT_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n   \r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}