{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"./ProductTypes\";\nimport * as actions from \"./ProductActions\";\nimport api from \"Api\"; //=========================\n// REQUESTS\n//=========================\n\nconst getProductModelDataRequest = async payload => {\n  const data = await api.get(`/categories/${payload.payload}`);\n  return data;\n};\n\nconst getProductGradesRequest = async payload => {\n  const gradesData = await api.get(`/products/specificGrades/${payload.payload.modelId}`);\n  let gradeId = null;\n  !!payload.payload.gradeId ? gradeId = payload.payload.gradeId : gradeId = gradesData.data.fields[0].id;\n  const exteriorData = await api.get(`/products/specificVariantExterior/${gradeId}`);\n  const interiorData = await api.get(`/products/specificVariantInterior/${gradeId}`);\n  const accessoriesData = await api.get(`/products/specificGradeProductOption/${gradeId}`);\n  const data = {\n    gradeId: gradeId,\n    gradesData: gradesData,\n    exteriorData: exteriorData,\n    interiorData: interiorData,\n    accessoriesData: accessoriesData\n  };\n  return data;\n};\n\nconst getProductGradeDataRequest = async payload => {\n  const exteriorData = await api.get(`/products/specificVariantExterior/${payload.payload}`);\n  const interiorData = await api.get(`/products/specificVariantInterior/${payload.payload}`);\n  const accessoriesData = await api.get(`/products/specificGradeProductOption/${payload.payload}`);\n  const data = {\n    exteriorData: exteriorData,\n    interiorData: interiorData,\n    accessoriesData: accessoriesData\n  };\n  return data;\n}; //=========================\n// CALL(GENERATOR) ACTIONS\n//=========================\n\n\nfunction* getProductModelData(e) {\n  try {\n    const data = yield call(getProductModelDataRequest, e);\n    yield put(actions.getProductModelDataSuccess(data));\n  } catch (error) {\n    yield put(actions.getProductModelDataFailure(data));\n    console.log(\"Error!\");\n  }\n}\n\nfunction* getProductGrades(e) {\n  try {\n    const data = yield call(getProductGradesRequest, e);\n    yield put(actions.getProductGradesSuccess(data));\n  } catch (error) {\n    yield put(actions.getProductGradesFailure(data));\n    console.log(\"Error!\");\n  }\n}\n\nfunction* getProductGradeData(e) {\n  try {\n    const data = yield call(getProductGradeDataRequest, e);\n    yield put(actions.getProductGradeDataSuccess(data));\n  } catch (error) {\n    yield put(actions.getProductGradeDataFailure(data));\n    console.log(\"Error!\");\n  }\n} //=======================\n// WATCHER FUNCTIONS\n//=======================\n\n\nexport function* getProductModelDataWatcher() {\n  yield takeEvery(types.GET_PRODUCT_MODEL_DATA, getProductModelData);\n}\nexport function* getProductGradesWatcher() {\n  yield takeEvery(types.GET_PRODUCT_GRADES, getProductGrades);\n}\nexport function* getProductGradeDataWatcher() {\n  yield takeEvery(types.GET_PRODUCT_GRADE_DATA, getProductGradeData);\n} //=======================\n// FORK SAGAS TO STORE\n//=======================\n\nexport default function* productSaga() {\n  yield all([fork(getProductModelDataWatcher), fork(getProductGradesWatcher), fork(getProductGradeDataWatcher)]);\n}","map":{"version":3,"sources":["C:/Users/LY/Desktop/vc-web/redux/ducks/product/ProductSaga.js"],"names":["all","call","fork","put","takeEvery","types","actions","api","getProductModelDataRequest","payload","data","get","getProductGradesRequest","gradesData","modelId","gradeId","fields","id","exteriorData","interiorData","accessoriesData","getProductGradeDataRequest","getProductModelData","e","getProductModelDataSuccess","error","getProductModelDataFailure","console","log","getProductGrades","getProductGradesSuccess","getProductGradesFailure","getProductGradeData","getProductGradeDataSuccess","getProductGradeDataFailure","getProductModelDataWatcher","GET_PRODUCT_MODEL_DATA","getProductGradesWatcher","GET_PRODUCT_GRADES","getProductGradeDataWatcher","GET_PRODUCT_GRADE_DATA","productSaga"],"mappings":"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","sourcesContent":["import { \r\n  all, \r\n  call, \r\n  fork, \r\n  put, \r\n  takeEvery,\r\n} from \"redux-saga/effects\"\r\n\r\nimport * as types from \"./ProductTypes\"\r\nimport * as actions from \"./ProductActions\"\r\nimport api from \"Api\"\r\n\r\n//=========================\r\n// REQUESTS\r\n//=========================\r\nconst getProductModelDataRequest = async(payload) => {\r\n  const data = await api.get(`/categories/${payload.payload}`)\r\n  return data\r\n}\r\n\r\nconst getProductGradesRequest = async(payload) => {\r\n  const gradesData = await api.get(`/products/specificGrades/${payload.payload.modelId}`)\r\n  let gradeId = null\r\n  !!payload.payload.gradeId ?\r\n  gradeId = payload.payload.gradeId :\r\n  gradeId = gradesData.data.fields[0].id\r\n\r\n  const exteriorData = await api.get(`/products/specificVariantExterior/${gradeId}`)\r\n  const interiorData = await api.get(`/products/specificVariantInterior/${gradeId}`)\r\n  const accessoriesData = await api.get(`/products/specificGradeProductOption/${gradeId}`)\r\n\r\n  const data = {\r\n    gradeId: gradeId,\r\n    gradesData: gradesData,\r\n    exteriorData: exteriorData,\r\n    interiorData: interiorData,\r\n    accessoriesData: accessoriesData\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nconst getProductGradeDataRequest = async(payload) => {\r\n  const exteriorData = await api.get(`/products/specificVariantExterior/${payload.payload}`)\r\n  const interiorData = await api.get(`/products/specificVariantInterior/${payload.payload}`)\r\n  const accessoriesData = await api.get(`/products/specificGradeProductOption/${payload.payload}`)\r\n  const data = {\r\n    exteriorData: exteriorData,\r\n    interiorData: interiorData,\r\n    accessoriesData: accessoriesData\r\n  }\r\n  return data\r\n}\r\n\r\n//=========================\r\n// CALL(GENERATOR) ACTIONS\r\n//=========================\r\nfunction* getProductModelData(e) {\r\n  try {\r\n    const data = yield call(getProductModelDataRequest, e)\r\n    yield put(actions.getProductModelDataSuccess(data))\r\n  } catch (error) {\r\n    yield put(actions.getProductModelDataFailure(data))\r\n    console.log(\"Error!\")\r\n  }\r\n}\r\n\r\nfunction* getProductGrades(e) {\r\n  try {\r\n    const data = yield call(getProductGradesRequest, e)\r\n    yield put(actions.getProductGradesSuccess(data))\r\n  } catch (error) {\r\n    yield put(actions.getProductGradesFailure(data))\r\n    console.log(\"Error!\")\r\n  }\r\n}\r\n\r\nfunction* getProductGradeData(e) {\r\n  try {\r\n    const data = yield call(getProductGradeDataRequest, e)\r\n    yield put(actions.getProductGradeDataSuccess(data))\r\n  } catch (error) {\r\n    yield put(actions.getProductGradeDataFailure(data))\r\n    console.log(\"Error!\")\r\n  }\r\n}\r\n\r\n//=======================\r\n// WATCHER FUNCTIONS\r\n//=======================\r\nexport function* getProductModelDataWatcher() {\r\n  yield takeEvery(types.GET_PRODUCT_MODEL_DATA, getProductModelData)\r\n}\r\n\r\nexport function* getProductGradesWatcher() {\r\n  yield takeEvery(types.GET_PRODUCT_GRADES, getProductGrades)\r\n}\r\n\r\nexport function* getProductGradeDataWatcher() {\r\n  yield takeEvery(types.GET_PRODUCT_GRADE_DATA, getProductGradeData)\r\n}\r\n\r\n//=======================\r\n// FORK SAGAS TO STORE\r\n//=======================\r\nexport default function* productSaga() {\r\n  yield all([\r\n    fork(getProductModelDataWatcher),\r\n    fork(getProductGradesWatcher),\r\n    fork(getProductGradeDataWatcher),\r\n  ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}