{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport api from \"Api\";\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nclass MegaTab extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_HandleMake\", async index => {\n      await this.setState({\n        stage: index,\n        ModelLoading: true\n      });\n      let AllModelSource = [];\n\n      if (index == 0) {\n        const Model = await api.get(`http://159.65.14.175:3001/api/products/getModel`);\n        AllModelSource = await Model.data.fields;\n      } else {\n        let AllMakeSource = this.state.AllMakeSource[index];\n        AllModelSource = await this._RenderSpecificModelCategory(AllMakeSource.id);\n      }\n\n      await this.setState({\n        ModelLoading: false,\n        AllModelSource: AllModelSource\n      });\n    });\n\n    _defineProperty(this, \"_RenderMake\", () => {\n      return this.state.AllMakeSource.map((make, index) => {\n        const stage = this.state.stage;\n        let style = {\n          padding: '10px'\n        };\n\n        if (stage == index) {\n          style = {\n            borderBottom: '3px solid #F29D30',\n            color: '#F29D30',\n            padding: '10px'\n          };\n        }\n\n        return (// All BMW Honda ...\n          __jsx(\"div\", {\n            key: index,\n            style: style,\n            onClick: () => this._HandleMake(index)\n          }, make.name)\n        );\n      });\n    });\n\n    _defineProperty(this, \"_RenderModel\", () => {\n      var modelImage = {\n        objectFit: 'cover',\n        borderRadius: '20px',\n        // wdith: '150px',\n        height: '100px',\n        padding: \"5px\"\n      };\n      return this.state.AllModelSource.map((model, index) => {\n        return __jsx(Link, {\n          key: index,\n          href: \"/model/[id]\",\n          as: `/model/${model.id.replace(/ /g, \"-\")}`\n        }, __jsx(\"div\", {\n          className: \"col-3 my-2 px-2\"\n        }, model.files.map(image => {\n          return __jsx(Link, {\n            key: index,\n            href: \"/model/[id]\",\n            as: `/model/${model.id.replace(/ /g, \"-\")}`\n          }, __jsx(\"img\", {\n            style: modelImage,\n            src: image.url\n          }));\n        }), __jsx(Link, {\n          key: index,\n          href: \"/model/[id]\",\n          as: `/model/${model.id.replace(/ /g, \"-\")}`\n        }, model.name)));\n      });\n    });\n\n    this.state = {\n      stage: 0,\n      AllMakeSource: [{\n        name: 'All',\n        description: 'All model in the Venture Cars '\n      }],\n      AllModelSource: [],\n      ModelLoading: true\n    };\n  }\n\n  async componentDidMount() {\n    //component will mount with an empty state this.state... After mounting, we populate the state with data from AllMakeSource\n    let AllMakeSource = [...this.state.AllMakeSource];\n\n    try {\n      const Make = await api.get(`http://159.65.14.175:3001/api/products/getMake`);\n      const MakeSource = Make.data.fields;\n      const Model = await api.get(`http://159.65.14.175:3001/api/products/getModel`);\n      const Tags = await api.get(`http://159.65.14.175:3001/api/tags/getAllTags`);\n      const ModelSource = Model.data.fields;\n      this.setState({\n        AllModelSource: ModelSource,\n        AllMakeSource: AllMakeSource.concat(MakeSource),\n        ModelLoading: false\n      });\n    } catch (e) {\n      this.setState({\n        AllModelSource: [],\n        AllMakeSource: [],\n        ModelLoading: false\n      });\n    }\n  } //onclick 0 show All Model, > 1 show SpecificMakeModel\n\n\n  async _RenderSpecificModelCategory(value) {\n    try {\n      const ModelSource = await api.get(`http://159.65.14.175:3001/api/categories/${value}/category`);\n      return ModelSource.data;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"text-uppercase\"\n    }, __jsx(\"ul\", {\n      className: \"nav nav-tabs\"\n    }, this.state.AllMakeSource.length > 0 && this._RenderMake()), __jsx(\"div\", {\n      className: \"tab-content\"\n    }, !this.state.ModelLoading && __jsx(\"div\", null, this.state.AllModelSource.length > 0 && __jsx(\"div\", {\n      className: \"tab-pane row\"\n    }, this._RenderModel()), this.state.AllModelSource.length == 0 && __jsx(\"div\", {\n      className: \"tab-pane row\"\n    }, \"No Model Found\")), this.state.ModelLoading && __jsx(\"div\", null, \"Loading ....\")));\n  }\n\n}\n\nexport default MegaTab;","map":{"version":3,"sources":["C:/Users/LY/Desktop/vc-web/components/Layout/MegaTab.js"],"names":["React","Component","api","useRouter","Link","MegaTab","constructor","props","index","setState","stage","ModelLoading","AllModelSource","Model","get","data","fields","AllMakeSource","state","_RenderSpecificModelCategory","id","map","make","style","padding","borderBottom","color","_HandleMake","name","modelImage","objectFit","borderRadius","height","model","replace","files","image","url","description","componentDidMount","Make","MakeSource","Tags","ModelSource","concat","e","value","console","log","render","length","_RenderMake","_RenderModel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport api from \"Api\";\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nclass MegaTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stage: 0,\r\n      AllMakeSource : [{\r\n        name: 'All',\r\n        description : 'All model in the Venture Cars '\r\n      }],\r\n      AllModelSource: [],\r\n      ModelLoading : true\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //component will mount with an empty state this.state... After mounting, we populate the state with data from AllMakeSource\r\n    let AllMakeSource = [...this.state.AllMakeSource]\r\n    try {\r\n      const Make = await api.get(`http://159.65.14.175:3001/api/products/getMake`);\r\n      const MakeSource = Make.data.fields\r\n      const Model = await api.get(`http://159.65.14.175:3001/api/products/getModel`);\r\n      const Tags = await api.get(`http://159.65.14.175:3001/api/tags/getAllTags`);\r\n      const ModelSource = Model.data.fields\r\n      this.setState({AllModelSource: ModelSource, AllMakeSource: AllMakeSource.concat(MakeSource), ModelLoading: false})\r\n    } catch (e){\r\n      this.setState({AllModelSource: [], AllMakeSource: [], ModelLoading: false})\r\n    }\r\n  }\r\n\r\n  //onclick 0 show All Model, > 1 show SpecificMakeModel\r\n  _HandleMake = async (index) => {\r\n    await this.setState({stage: index, ModelLoading: true})\r\n    let AllModelSource = []\r\n    if(index == 0){\r\n      const Model = await api.get(`http://159.65.14.175:3001/api/products/getModel`);\r\n      AllModelSource = await Model.data.fields\r\n    } else {\r\n      let AllMakeSource = this.state.AllMakeSource[index]\r\n      AllModelSource = await this._RenderSpecificModelCategory(AllMakeSource.id)\r\n    }\r\n    await this.setState({ModelLoading: false, AllModelSource: AllModelSource})\r\n  }\r\n  async _RenderSpecificModelCategory(value) {\r\n    try {\r\n        const ModelSource = await api.get(`http://159.65.14.175:3001/api/categories/${value}/category`);\r\n        return ModelSource.data\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n  }\r\n\r\n  _RenderMake = () => {\r\n    return (\r\n      this.state.AllMakeSource.map((make, index) => {\r\n        const stage = this.state.stage\r\n        let style = {padding: '10px'}\r\n        if(stage == index){\r\n          style = {borderBottom: '3px solid #F29D30', color:'#F29D30',padding: '10px'}\r\n        }\r\n        return (\r\n          // All BMW Honda ...\r\n          <div key={index} style={style} onClick={() => this._HandleMake(index)}>\r\n              {make.name} \r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n  _RenderModel = () => {\r\n    var modelImage = {\r\n      objectFit: 'cover',\r\n      borderRadius: '20px',\r\n      // wdith: '150px',\r\n      height: '100px',\r\n      padding: \"5px\"\r\n    };\r\n     \r\n    return (  \r\n      this.state.AllModelSource.map((model, index) => {            \r\n        return (\r\n          <Link key={index} href=\"/model/[id]\" as={`/model/${(model.id).replace(/ /g,\"-\")}`}>  \r\n              <div className=\"col-3 my-2 px-2\"> \r\n                {\r\n                  model.files.map(image => { \r\n                    return ( \r\n                      <Link key={index} href=\"/model/[id]\" as={`/model/${(model.id).replace(/ /g,\"-\")}`}> \r\n                        <img style={modelImage} src={image.url} />\r\n                      </Link>\r\n                      )\r\n                  } )\r\n                }\r\n                <Link key={index} href=\"/model/[id]\" as={`/model/${(model.id).replace(/ /g,\"-\")}`}> \r\n                  {model.name}\r\n                </Link>\r\n              </div>    \r\n          </Link>             \r\n        )      \r\n      })\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (  <div className=\"text-uppercase\">\r\n      <ul className=\"nav nav-tabs\">  \r\n              {this.state.AllMakeSource.length > 0 &&\r\n                  this._RenderMake()\r\n              }\r\n      </ul> \r\n      <div className=\"tab-content\">       \r\n              {!this.state.ModelLoading &&\r\n                <div>\r\n                  {this.state.AllModelSource.length > 0 &&\r\n                    <div className=\"tab-pane row\">  \r\n                        {this._RenderModel()}\r\n                    </div>  \r\n                  }\r\n                  {this.state.AllModelSource.length == 0 &&\r\n                    <div className=\"tab-pane row\">\r\n                      No Model Found\r\n                    </div>     \r\n                  }\r\n                </div>\r\n              }\r\n              {this.state.ModelLoading &&\r\n                <div>\r\n                  Loading ....\r\n                </div>\r\n              }\r\n      </div>          \r\n  </div>) \r\n  }\r\n}\r\nexport default MegaTab;\r\n"]},"metadata":{},"sourceType":"module"}