{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"./ModelTypes\";\nimport * as actions from \"./ModelActions\";\nimport api from \"Api\"; //=========================\n// REQUESTS\n//=========================\n\nconst getModelDataRequest = async payload => {\n  const data = await api.get(`/categories/${payload.payload}`);\n  return data;\n}; //=========================\n// CALL(GENERATOR) ACTIONS\n//=========================\n\n\nfunction* getModelData(e) {\n  try {\n    const data = yield call(getModelDataRequest, e);\n    yield put(actions.getModelDataSuccess(data));\n  } catch (error) {\n    yield put(actions.getModelDataFailure(data));\n    console.log(\"Error!\");\n  }\n} //=======================\n// WATCHER FUNCTIONS\n//=======================\n\n\nexport function* getModelDataWatcher() {\n  yield takeEvery(types.GET_MODEL_DATA, getModelData);\n} //=======================\n// FORK SAGAS TO STORE\n//=======================\n\nexport default function* ModelSaga() {\n  yield all([fork(getModelDataWatcher)]);\n}","map":{"version":3,"sources":["C:/Users/LY/Desktop/vc-web/redux/ducks/model/ModelSaga.js"],"names":["all","call","fork","put","takeEvery","types","actions","api","getModelDataRequest","payload","data","get","getModelData","e","getModelDataSuccess","error","getModelDataFailure","console","log","getModelDataWatcher","GET_MODEL_DATA","ModelSaga"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,SALF,QAMO,oBANP;AAQA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,KAAhB,C,CAEA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAG,MAAMC,OAAN,IAAkB;AAC5C,QAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAS,eAAcF,OAAO,CAACA,OAAQ,EAAvC,CAAnB;AACA,SAAOC,IAAP;AACD,CAHD,C,CAKA;AACA;AACA;;;AACA,UAAUE,YAAV,CAAuBC,CAAvB,EAA0B;AACxB,MAAI;AACF,UAAMH,IAAI,GAAG,MAAMT,IAAI,CAACO,mBAAD,EAAsBK,CAAtB,CAAvB;AACA,UAAMV,GAAG,CAACG,OAAO,CAACQ,mBAAR,CAA4BJ,IAA5B,CAAD,CAAT;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACG,OAAO,CAACU,mBAAR,CAA4BN,IAA5B,CAAD,CAAT;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF,C,CAED;AACA;AACA;;;AACA,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMf,SAAS,CAACC,KAAK,CAACe,cAAP,EAAuBR,YAAvB,CAAf;AACD,C,CAED;AACA;AACA;;AACA,eAAe,UAAUS,SAAV,GAAsB;AACnC,QAAMrB,GAAG,CAAC,CACRE,IAAI,CAACiB,mBAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { \r\n  all, \r\n  call, \r\n  fork, \r\n  put, \r\n  takeEvery,\r\n} from \"redux-saga/effects\"\r\n\r\nimport * as types from \"./ModelTypes\"\r\nimport * as actions from \"./ModelActions\"\r\nimport api from \"Api\"\r\n\r\n//=========================\r\n// REQUESTS\r\n//=========================\r\nconst getModelDataRequest = async(payload) => {\r\n  const data = await api.get(`/categories/${payload.payload}`)\r\n  return data\r\n}\r\n\r\n//=========================\r\n// CALL(GENERATOR) ACTIONS\r\n//=========================\r\nfunction* getModelData(e) {\r\n  try {\r\n    const data = yield call(getModelDataRequest, e)\r\n    yield put(actions.getModelDataSuccess(data))\r\n  } catch (error) {\r\n    yield put(actions.getModelDataFailure(data))\r\n    console.log(\"Error!\")\r\n  }\r\n}\r\n\r\n//=======================\r\n// WATCHER FUNCTIONS\r\n//=======================\r\nexport function* getModelDataWatcher() {\r\n  yield takeEvery(types.GET_MODEL_DATA, getModelData)\r\n}\r\n\r\n//=======================\r\n// FORK SAGAS TO STORE\r\n//=======================\r\nexport default function* ModelSaga() {\r\n  yield all([\r\n    fork(getModelDataWatcher),\r\n  ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}