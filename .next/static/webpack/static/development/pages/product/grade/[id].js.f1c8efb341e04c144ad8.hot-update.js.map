{"version":3,"file":"static/webpack/static\\development\\pages\\product\\grade\\[id].js.f1c8efb341e04c144ad8.hot-update.js","sources":["webpack:///./pages/product/grade/Accessories.js","webpack:///./pages/product/grade/Grade.js","webpack:///./pages/product/grade/.js","webpack:///./redux/ducks/product/ProductActions.js"],"sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { selectedProductAccessories } from \"Ducks/product/ProductActions\"\r\n\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nconst Accessories = props => {\r\n  \r\n  const handleOptionChange = event => {\r\n    const { id } = event.target\r\n    props.selectedProductAccessories(id)\r\n  }\r\n\r\n  console.log(\"Accessories props: \", props)\r\n  const { fields } = props.ProductState.productAccessories.data\r\n  return(\r\n    <div className=\"configure-opt\">\r\n      <h2 className=\"configure-opt-title\">05 Accessories</h2>\r\n      <ul className=\"p-0 list-unstyled\">\r\n        {!!fields &&        \r\n          Object.entries(fields).map(([key, value], id) => (\r\n            <div className=\"product-option-group\" key={ id }>\r\n              <p><strong>Product Option Group: { key }</strong></p>\r\n              <ul className=\"p-0\">\r\n                { value.map(( item, id ) => (\r\n                  <li\r\n                    key={ id }\r\n                    id={ item.id }\r\n                    className=\"product-option list-unstyled configure-list\" \r\n                    style={ !!props.ProductState.productAccessories.selectedIds[item.id] ? \r\n                      {border: \"2px solid orange\", color: \"#F29D30\"} : {border: \"1px solid #DEE2E6\"}\r\n                    }\r\n                    onClick={ handleOptionChange }\r\n                  >\r\n                    { item.productOption.name }<br/>\r\n                    ${ item.productOption.price }\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))\r\n        }\r\n      </ul>\r\n      <Accordion>\r\n      <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"configure-total-header\">\r\n          Total (SGD)\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <Card.Body>\r\n            <div className=\"p-0 list-unstyled configure-total\">\r\n              <dl>\r\n                <dt>{`01 Car Make & Model`}</dt>\r\n                <dd>{props.ProductState.productModel.name}</dd>\r\n              </dl>\r\n              <dl>\r\n                <dt>02 Grade</dt>\r\n                <dt>${props.ProductState.productGrade.price}</dt>\r\n                <dd>{props.ProductState.productGrade.name}</dd>\r\n              </dl>\r\n              <dl>\r\n                <dt>03 Exterior</dt>\r\n                <dt>${props.ProductState.productExterior.price}</dt>\r\n                <dd>{props.ProductState.productExterior.name}</dd>\r\n              </dl>\r\n              <dl>\r\n                <dt>04 Interior</dt>\r\n                <dt>${props.ProductState.productInterior.price}</dt>\r\n                <dd>{props.ProductState.productInterior.name}</dd>\r\n              </dl>\r\n              <dl>\r\n                <dt>05 Rims</dt>\r\n                <dt>${props.ProductState.productRims.price}</dt>\r\n                <dd>{props.ProductState.productRims.name}</dd>\r\n              </dl>\r\n            </div>\r\n          </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { ProductState } = state\r\n  return { ProductState }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectedProductAccessories\r\n  }\r\n)(Accessories)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { selectedProductGrade, getProductGradeData } from \"Ducks/product/ProductActions\"\r\n\r\nconst Grade = props => {\r\n  \r\n  const handleOptionChange = event => {\r\n    const { id } = event.target\r\n    props.selectedProductGrade(id)\r\n    props.getProductGradeData(id)\r\n  }\r\n\r\n  const { fields } = props.productGrade.data\r\n  console.log(\"grade props= \", props)\r\n  return(\r\n    <div className=\"configure-sect row\">\r\n      <div className=\"configure-gall col-9\">\r\n        { props.productGrade.description }\r\n      </div>\r\n    <div className=\"configure-opt col-3\">\r\n      <h2 className=\"configure-opt-title\">01 Grade</h2>\r\n      <ul className=\"list-unstyled\">\r\n        {!!fields &&\r\n          fields.map(( item, id ) => (\r\n            <li className=\"configure-list\"\r\n              key={ id }\r\n              id= { item.id }\r\n              style={item.id == props.productGrade.id ? \r\n                {border: \"2px solid #F29D30\", color: \"#F29D30\"} : \r\n                {border: \"1px solid #DEE2E6\"}\r\n              }\r\n              onClick={ handleOptionChange }\r\n            >\r\n              {item.name}<br/>\r\n              ${item.selling_Price}\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { productGrade } = state.ProductState\r\n  return { productGrade }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectedProductGrade,\r\n    getProductGradeData\r\n  }\r\n)(Grade)","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport Default from \"Components/Layout/PageTemplates/Default\"\r\nimport StepZilla from \"react-stepzilla\"\r\nimport Grade from \"./Grade\"\r\nimport Exterior from \"./Exterior\"\r\nimport Interior from \"./Interior\"\r\nimport Rims from \"./Rims\"\r\nimport Accessories from \"./Accessories\"\r\n\r\nimport { getProductGrades, getProductModelData } from \"Ducks/product/ProductActions\"\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.props.getProductModelData(this.props.selectedModelId)\r\n    !!this.props.selectedGradeId ?\r\n      this.props.getProductGrades(this.props.selectedModelId, this.props.selectedGradeId) :\r\n      this.props.getProductGrades(this.props.selectedModelId)\r\n  }\r\n  \r\n  render(){\r\n    console.log(\"props= \", this.props)\r\n    const { ProductState } = this.props    \r\n    const steps = [\r\n      {name: \"Grade\", component:<Grade productGrade={ProductState.productGrade} />},\r\n      {name: \"Exterior\", component: <Exterior productExterior={ProductState.productExterior} />},\r\n      {name: \"Interior\", component: <Interior productInterior={ProductState.productInterior} /> },\r\n      {name: \"Rims\", component: <Rims productRims={ProductState.productRims} /> },\r\n      {name: \"Accessories\", component: <Accessories ProductState={ProductState} /> }\r\n    ]\r\n    \r\n    return (\r\n      <Default>\r\n        <section className=\"configure-area pb-60\">\r\n          <div className=\"container\">\r\n            <div>\r\n              {/* need to validate steps to prevent user from skipping steps */}\r\n              <div className=\"step-process\">\r\n                <StepZilla steps={steps} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Default>\r\n    )\r\n  }\r\n}\r\n\r\nProduct.getInitialProps = async function({ctx}) {\r\n  const { id, grade } = ctx.query\r\n  return { selectedModelId: id, selectedGradeId: grade }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { ProductState } = state\r\n  return { ProductState }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getProductGrades,\r\n    getProductModelData,\r\n  }\r\n)(Product)","import * as types from \"./ProductTypes\";\r\n\r\n// Get data of selected model\r\nexport const getProductModelData = e => ({\r\n  type: types.GET_PRODUCT_MODEL_DATA,\r\n  payload: e\r\n})\r\n\r\nexport const getProductModelDataSuccess = e => ({\r\n  type: types.GET_PRODUCT_MODEL_DATA_SUCCESS,\r\n  payload: e\r\n})\r\n\r\nexport const getProductModelDataFailure = e => ({\r\n  type: types.GET_PRODUCT_MODEL_DATA_FAILURE,\r\n  payload: e\r\n})\r\n\r\n// Get grades of selected model\r\nexport const getProductGrades = (modelId, gradeId = null) => ({\r\n  type: types.GET_PRODUCT_GRADES,\r\n  payload: {\r\n    modelId: modelId,\r\n    gradeId: gradeId\r\n  }\r\n})\r\n\r\nexport const getProductGradesSuccess = e => ({\r\n  type: types.GET_PRODUCT_GRADES_SUCCESS,\r\n  payload: e\r\n})\r\n\r\nexport const getProductGradesFailure = e => ({\r\n  type: types.GET_PRODUCT_GRADES_FAILURE,\r\n  payload: e\r\n})\r\n\r\n// Update selected grade\r\nexport const selectedProductGrade = e => ({\r\n  type: types.SELECTED_PRODUCT_GRADE,\r\n  payload: e\r\n})\r\n\r\n// Get data of selected grade\r\nexport const getProductGradeData = e => ({\r\n  type: types.GET_PRODUCT_GRADE_DATA,\r\n  payload: e\r\n})\r\n\r\nexport const getProductGradeDataSuccess = e => ({\r\n  type: types.GET_PRODUCT_GRADE_DATA_SUCCESS,\r\n  payload: e\r\n})\r\n\r\nexport const getProductGradeDataFailure = e => ({\r\n  type: types.GET_PRODUCT_GRADE_DATA_FAILURE,\r\n  payload: e\r\n})\r\n\r\n// Update selected exterior\r\nexport const selectedProductExterior = e => ({\r\n  type: types.SELECTED_PRODUCT_EXTERIOR,\r\n  payload: e\r\n})\r\n\r\n// Update selected interior\r\nexport const selectedProductInterior = e => ({\r\n  type: types.SELECTED_PRODUCT_INTERIOR,\r\n  payload: e\r\n})\r\n\r\n// Update selected rims\r\nexport const selectedProductRims = e => ({\r\n  type: types.SELECTED_PRODUCT_RIMS,\r\n  payload: e\r\n})\r\n\r\n// Update selected accessories\r\nexport const selectedProductAccessories = e => ({\r\n  type: types.SELECTED_PRODUCT_ACCESSORIES,\r\n  payload: e\r\n})"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAPA;AADA;AAJA;AAyBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAgCA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AADA;;;;;;;;;;;;;;;;;;AC7FA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAPA;AADA;AAmBA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;AAGA;;;AAEA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAOA;;;;AArCA;AACA;AAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAFA;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAQA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;;;;A","sourceRoot":""}